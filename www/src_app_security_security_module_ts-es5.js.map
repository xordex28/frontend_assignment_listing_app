{"version":3,"sources":["webpack:///src/app/security/login/login.page.html","webpack:///src/app/security/login/login.page.ts","webpack:///src/app/security/security-routing.module.ts","webpack:///src/app/security/security.module.ts","webpack:///src/app/utils/requests/toast.service.ts"],"names":["LoginPage","authService","toastService","router","cargando","validation_messages","type","message","loginForm","FormGroup","FormControl","Validators","login","value","email","password","subscribe","data","console","log","show","navigate","error","list","getUser","routes","path","component","redirectTo","pathMatch","SecurityPageRoutingModule","RouterModule","SecurityPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","UtilsModule","ToastService","toastController","title","create","header","position","duration","color","toast","present","dataNotification","notification","body","cssClass"],"mappings":"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","file":"src_app_security_security_module_ts-es5.js","sourcesContent":["<ion-content>\n  <div class=\"full\">\n    <div class=\"form\">\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n        <ion-grid>\n          <ion-row>\n            <ion-col class=\"logo\" size=\"12\">\n            <img height=\"100px\" src=\"http://www.grupobtp.com/wp-content/uploads/2018/10/logoo-300x232.png\" alt=\"\">\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col size=\"12\">\n              <h2 class=\"title\">\n                Bienvenidos al Sistema\n              </h2>\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col size-md=\"10\" offset-md=\"1\">\n              <div>\n                <ion-list class=\"inputs-list\" lines=\"full\">\n                  <ion-item class=\"input-item\">\n                    <ion-input type=\"email\" placeholder=\"Email\" formControlName=\"email\" clearInput autocapitalize=\"off\"\n                      inputmode=\"email\"></ion-input>\n                  </ion-item>\n                  <div class=\"error-container\">\n                    <ng-container *ngFor=\"let validation of validation_messages.email\">\n                      <div class=\"error-message\"\n                        *ngIf=\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n                        <ion-icon name=\"information-circle-outline\"></ion-icon>\n                        <span>{{ validation.message }}</span>\n                      </div>\n                    </ng-container>\n                  </div>\n\n                  <ion-item class=\"input-item\">\n                    <app-show-hide-password>\n                      <ion-input type=\"password\" placeholder=\"Password\" formControlName=\"password\" ></ion-input>\n                    </app-show-hide-password>\n                  </ion-item>\n                  <div class=\"error-container\">\n                    <ng-container *ngFor=\"let validation of validation_messages.password\">\n                      <div class=\"error-message\"\n                        *ngIf=\"loginForm.get('password').hasError(validation.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\n                        <ion-icon name=\"information-circle-outline\"></ion-icon>\n                        <span>{{ validation.message }}</span>\n                      </div>\n                    </ng-container>\n                  </div>\n                </ion-list>\n              </div>\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col size-md=\"10\" offset-md=\"1\">\n              <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\" [disabled]=\"!loginForm.valid || cargando\">\n                {{cargando ? 'Verificando...' : 'Ingresar' }}\n              </ion-button>\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col size-md=\"10\" offset-md=\"1\" class=\"other-auth-options-row\">\n              <ion-button class=\"forgot-btn\" fill=\"clear\" (click)=\"getUser()\">\n                Recuperar Contrase√±a?\n              </ion-button>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </form>\n    </div>\n  </div>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { User, AuthModel } from '../../models/models';\nimport { ToastService } from '../../utils/requests/toast.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  loginForm: FormGroup;\n  errors: any;\n  cargando = false;\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email es requerido.' },\n      { type: 'pattern', message: 'Ingresa un Email valido' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password es requerida.' },\n      { type: 'minlength', message: 'Password debe tener minino 5 caracteres.' }\n    ]\n  };\n\n  constructor(\n    private authService: AuthService,\n    private toastService: ToastService,\n    private router: Router\n  ) { }\n\n  async ngOnInit() {\n    this.loginForm = new FormGroup({\n      'email': new FormControl('luis.gustavo.282000@gmail.com', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'password': new FormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required\n      ]))\n    });\n  }\n\n  async login() {\n    this.cargando = true;\n    this.authService.login(this.loginForm.value.email,\n      this.loginForm.value.password).subscribe((data: User) => {\n        console.log(data);\n        this.toastService.show('Ingreso Exitoso', 'Bienvenido al sistema', 'success');\n        this.cargando = false;\n        this.router.navigate(['/app/home']);\n\n      }, (error) => {\n        console.log(error);\n        this.toastService.show('Error', error, 'error');\n        this.cargando = false;\n      });\n  }\n\n  async getUser() {\n    this.authService.list().subscribe((data: User[]) => {\n      console.log(data);\n    }, (error) => {\n      console.log(error);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login/login.page';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginPage\n  },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SecurityPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\n\nimport { SecurityPageRoutingModule } from './security-routing.module';\n\nimport { LoginPage } from './login/login.page';\nimport { UtilsModule } from '../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    SecurityPageRoutingModule,\n    UtilsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class SecurityPageModule {}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n\n  async show(title: string, message: string, type: \"success\" | \"error\" | \"info\" | \"warning\" | \"notification\") {\n    if (type === 'success') {\n      const toast = await this.toastController.create({\n        header: `${title}`,\n        message: `${message}`,\n        position: 'top',\n        duration: 5000,\n        color: \"success\"\n        /*       buttons: [\n                {\n                  side: 'start',\n                  icon: 'star',\n                  text: 'Favorite',\n                  handler: () => {\n                    console.log('Favorite clicked');\n                  }\n                }, {\n                  text: 'Done',\n                  role: 'cancel',\n                  handler: () => {\n                    console.log('Cancel clicked');\n                  }\n                }\n              ] */\n      });\n      toast.present();\n\n    }\n\n    if (type === 'error') {\n      const toast = await this.toastController.create({\n        header: `${title}`,\n        message: `${message}`,\n        position: 'top',\n        duration: 3500,\n        color: \"danger\"\n        /*       buttons: [\n                {\n                  side: 'start',\n                  icon: 'star',\n                  text: 'Favorite',\n                  handler: () => {\n                    console.log('Favorite clicked');\n                  }\n                }, {\n                  text: 'Done',\n                  role: 'cancel',\n                  handler: () => {\n                    console.log('Cancel clicked');\n                  }\n                }\n              ] */\n      });\n      toast.present();\n\n    }\n  }\n\n  async showNotification(dataNotification?: any) {\n    const toast = await this.toastController.create({\n      header: `${dataNotification.notification.title}`,\n      message: `${dataNotification.notification.body}`,\n      duration: 3000,\n      cssClass: 'toast-custom-class',\n    });\n    toast.present();\n  }\n}\n"]}