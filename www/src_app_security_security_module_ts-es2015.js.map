{"version":3,"sources":["./src/app/security/login/login.page.ts","./src/app/security/login/login.page.html","./src/app/security/security-routing.module.ts","./src/app/security/security.module.ts","./src/app/utils/requests/toast.service.ts"],"names":[],"mappings":"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","file":"src_app_security_security_module_ts-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { User, AuthModel } from '../../models/models';\nimport { ToastService } from '../../utils/requests/toast.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  loginForm: FormGroup;\n  errors: any;\n  cargando = false;\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email es requerido.' },\n      { type: 'pattern', message: 'Ingresa un Email valido' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password es requerida.' },\n      { type: 'minlength', message: 'Password debe tener minino 5 caracteres.' }\n    ]\n  };\n\n  constructor(\n    private authService: AuthService,\n    private toastService: ToastService,\n    private router: Router\n  ) { }\n\n  async ngOnInit() {\n    this.loginForm = new FormGroup({\n      'email': new FormControl('luis.gustavo.282000@gmail.com', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'password': new FormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required\n      ]))\n    });\n  }\n\n  async login() {\n    this.cargando = true;\n    this.authService.login(this.loginForm.value.email,\n      this.loginForm.value.password).subscribe((data: User) => {\n        console.log(data);\n        this.toastService.show('Ingreso Exitoso', 'Bienvenido al sistema', 'success');\n        this.cargando = false;\n        this.router.navigate(['/app/home']);\n\n      }, (error) => {\n        console.log(error);\n        this.toastService.show('Error', error, 'error');\n        this.cargando = false;\n      });\n  }\n\n  async getUser() {\n    this.authService.list().subscribe((data: User[]) => {\n      console.log(data);\n    }, (error) => {\n      console.log(error);\n    });\n  }\n}\n","<ion-content>\n  <div class=\"full\">\n    <div class=\"form\">\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n        <ion-grid>\n          <ion-row>\n            <ion-col class=\"logo\" size=\"12\">\n            <img height=\"100px\" src=\"http://www.grupobtp.com/wp-content/uploads/2018/10/logoo-300x232.png\" alt=\"\">\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col size=\"12\">\n              <h2 class=\"title\">\n                Bienvenidos al Sistema\n              </h2>\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col size=\"10\" offset=\"1\">\n              <div>\n                <ion-list class=\"inputs-list\" lines=\"full\">\n                  <ion-item class=\"input-item\">\n                    <ion-input type=\"email\" placeholder=\"Email\" formControlName=\"email\" clearInput autocapitalize=\"off\"\n                      inputmode=\"email\"></ion-input>\n                  </ion-item>\n                  <div class=\"error-container\">\n                    <ng-container *ngFor=\"let validation of validation_messages.email\">\n                      <div class=\"error-message\"\n                        *ngIf=\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n                        <ion-icon name=\"information-circle-outline\"></ion-icon>\n                        <span>{{ validation.message }}</span>\n                      </div>\n                    </ng-container>\n                  </div>\n\n                  <ion-item class=\"input-item\">\n                    <app-show-hide-password>\n                      <ion-input type=\"password\" placeholder=\"Password\" formControlName=\"password\" ></ion-input>\n                    </app-show-hide-password>\n                  </ion-item>\n                  <div class=\"error-container\">\n                    <ng-container *ngFor=\"let validation of validation_messages.password\">\n                      <div class=\"error-message\"\n                        *ngIf=\"loginForm.get('password').hasError(validation.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\n                        <ion-icon name=\"information-circle-outline\"></ion-icon>\n                        <span>{{ validation.message }}</span>\n                      </div>\n                    </ng-container>\n                  </div>\n                </ion-list>\n              </div>\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col size-md=\"10\" offset-md=\"1\">\n              <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\" [disabled]=\"!loginForm.valid || cargando\">\n                {{cargando ? 'Verificando...' : 'Ingresar' }}\n              </ion-button>\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col size-md=\"10\" offset-md=\"1\" class=\"other-auth-options-row\">\n              <ion-button class=\"forgot-btn\" fill=\"clear\" (click)=\"getUser()\">\n                Recuperar Contraseña?\n              </ion-button>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </form>\n    </div>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login/login.page';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginPage\n  },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SecurityPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\n\nimport { SecurityPageRoutingModule } from './security-routing.module';\n\nimport { LoginPage } from './login/login.page';\nimport { UtilsModule } from '../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    SecurityPageRoutingModule,\n    UtilsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class SecurityPageModule {}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n\n  async show(title: string, message: string, type: \"success\" | \"error\" | \"info\" | \"warning\" | \"notification\") {\n    if (type === 'success') {\n      const toast = await this.toastController.create({\n        header: `${title}`,\n        message: `${message}`,\n        position: 'top',\n        duration: 5000,\n        color: \"success\"\n        /*       buttons: [\n                {\n                  side: 'start',\n                  icon: 'star',\n                  text: 'Favorite',\n                  handler: () => {\n                    console.log('Favorite clicked');\n                  }\n                }, {\n                  text: 'Done',\n                  role: 'cancel',\n                  handler: () => {\n                    console.log('Cancel clicked');\n                  }\n                }\n              ] */\n      });\n      toast.present();\n\n    }\n\n    if (type === 'error') {\n      const toast = await this.toastController.create({\n        header: `${title}`,\n        message: `${message}`,\n        position: 'top',\n        duration: 3500,\n        color: \"danger\"\n        /*       buttons: [\n                {\n                  side: 'start',\n                  icon: 'star',\n                  text: 'Favorite',\n                  handler: () => {\n                    console.log('Favorite clicked');\n                  }\n                }, {\n                  text: 'Done',\n                  role: 'cancel',\n                  handler: () => {\n                    console.log('Cancel clicked');\n                  }\n                }\n              ] */\n      });\n      toast.present();\n\n    }\n  }\n\n  async showNotification(dataNotification?: any) {\n    const toast = await this.toastController.create({\n      header: `${dataNotification.notification.title}`,\n      message: `${dataNotification.notification.body}`,\n      duration: 3000,\n      cssClass: 'toast-custom-class',\n    });\n    toast.present();\n  }\n}\n"],"sourceRoot":"webpack:///"}