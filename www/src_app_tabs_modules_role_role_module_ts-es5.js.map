{"version":3,"sources":["webpack:///src/app/tabs/modules/role/role-edit/role-edit.component.html","webpack:///src/app/tabs/modules/role/role-edit/role-edit.component.ts","webpack:///src/app/tabs/modules/role/role-routing.module.ts","webpack:///src/app/tabs/modules/role/role.module.ts","webpack:///src/app/tabs/modules/role/role.page.html","webpack:///src/app/tabs/modules/role/role.page.ts"],"names":["RoleEditComponent","fb","route","roleService","toastService","loadingService","router","id","permits","loading","validation_messages","type","message","newRole","group","description","Validators","canApprove","active","params","subscribe","console","log","get","currentRole","controls","setValue","getAssingPermits","response","close","presentLoading","roleBody","value","update","show","navigateByUrl","err","add","length","assingPermits","toPromise","onSubmit","routes","path","children","component","RolePage","RolePageRoutingModule","RouterModule","RolePageModule","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","UtilsModule","MatInputModule","MatFormFieldModule","alertService","columns","attribute","header","title","template","navigate","relativeTo","current","_id","remove","tabla","refresh","onAdd"],"mappings":"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","file":"src_app_tabs_modules_role_role_module_ts-es5.js","sourcesContent":["<app-header [titulo]=\"id?'Editar Rol':'Crear Rol'\" [backButton]=\"true\"></app-header>\n<ion-content class=\"ion-padding\">\n  <ion-card>\n    <form [formGroup]=\"newRole\">\n      <ion-grid>\n        <ion-row>\n          <ion-col size-xs=\"12\" size-md=\"6\" size-lg=\"4\" size-xl=\"8\" offset-xl=\"2\">\n            <ion-item>\n              <ion-label position=\"floating\">Descripcion:</ion-label>\n              <ion-input required formControlName=\"description\"></ion-input>\n            </ion-item>\n            <div class=\"error-container\">\n              <ng-container *ngFor=\"let validation of validation_messages.description\">\n                <div class=\"error-message\"\n                  *ngIf=\"newRole.get('description').hasError(validation.type) && (newRole.get('description').dirty || newRole.get('description').touched)\">\n                  <ion-icon name=\"information-circle-outline\"></ion-icon>\n                  <span>{{ validation.message }}</span>\n                </div>\n              </ng-container>\n            </div>\n          </ion-col>\n          <ion-col size-xs=\"12\" size-md=\"6\" size-lg=\"4\" size-xl=\"8\" offset-xl=\"2\">\n            <ion-item>\n              <ion-label>Aprobar</ion-label>\n              <ion-text color=\"danger\">*</ion-text>\n              <ion-checkbox formControlName=\"canApprove\" slot=\"start\"></ion-checkbox>\n            </ion-item>\n          </ion-col>\n          <ion-col size-xs=\"12\" size-md=\"6\" size-lg=\"4\" size-xl=\"8\" offset-xl=\"2\">\n            <ion-item>\n              <ion-label>Activo</ion-label>\n              <ion-text color=\"danger\">*</ion-text>\n              <ion-checkbox formControlName=\"active\" slot=\"start\"></ion-checkbox>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col size=\"12\">\n            <ion-button [disabled]=\"!newRole.valid\" (click)=\"onSubmit()\" expand=\"block\" fill=\"clear\" shape=\"round\">\n              Guardar\n            </ion-button>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </form>\n  </ion-card>\n  <ion-card *ngIf=\"id!=='' && !loading && newRole.value.canApprove\">\n    <ion-row>\n      <ion-col size-xs=\"12\" size-md=\"6\" size-lg=\"4\" size-xl=\"8\" offset-xl=\"2\">\n        <b> Listado de Permisos de Aprobacion por Roll</b>\n      </ion-col>\n      <ion-col size-xs=\"12\" size-md=\"6\" size-lg=\"4\" size-xl=\"8\" offset-xl=\"2\">\n        <app-assing-tasks [id]=\"id\" [permits]=\"permits\" (newPermits)=\"onSubmitPermits($event)\"></app-assing-tasks>\n      </ion-col>\n    </ion-row>\n  </ion-card>\n</ion-content>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RoleService } from '../../../../services/role.service';\nimport { PermitApproved, Role } from '../../../../models/models';\nimport { ToastService } from '../../../../utils/services/toast.service';\nimport { LoadingService } from '../../../../utils/services/loading.service';\n\n\n@Component({\n  selector: 'app-role-edit',\n  templateUrl: './role-edit.component.html',\n  styleUrls: ['./role-edit.component.scss'],\n})\nexport class RoleEditComponent implements OnInit {\n\n  newRole: FormGroup;\n  id: string = '';\n  permits: PermitApproved[] = [];\n  loading: boolean = false;\n  constructor(private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private roleService: RoleService,\n    private toastService: ToastService,\n    private loadingService: LoadingService,\n    private router: Router) {\n\n  }\n\n  validation_messages = {\n    'description': [\n      { type: 'required', message: 'Descripcion es requerida.' },\n    ],\n    'canApprove': [\n      { type: 'required', message: 'Aprobar es requerido.' },\n    ],\n    'active': [\n      { type: 'required', message: 'Activo es requerido.' },\n    ]\n  };\n  ngOnInit() {\n    this.newRole = this.fb.group({\n      description: ['', Validators.required],\n      canApprove: [false, Validators.required],\n      active: [true, Validators.required]\n    })\n    this.route.params.subscribe((params) => {\n      this.loading = true;\n      if ('id' in params) {\n        console.log(params);\n        this.id = params.id;\n        this.roleService.get(this.id).subscribe((currentRole: Role) => {\n          this.newRole.controls.description.setValue(currentRole.description);\n          this.newRole.controls.canApprove.setValue(currentRole.canApprove);\n          this.newRole.controls.active.setValue(currentRole.active);\n          this.roleService.getAssingPermits(this.id).subscribe((response: any) => {\n            console.log({ response });\n            if (response) {\n              this.permits = [...response];\n            }\n            console.log(this.permits);\n\n            this.loading = false;\n            this.loadingService.close();\n          });\n        });\n      }\n    });\n\n  }\n\n  async onSubmit() {\n    await this.loadingService.presentLoading('Guardando...')\n    const roleBody = this.newRole.value;\n    if (this.id) {\n      this.roleService.update(this.id, roleBody).subscribe((response: Role) => {\n        console.log({ response });\n        this.loadingService.close();\n        this.toastService.show('Guardado Correctamente', 'Se modifico correctamente', 'success');\n        this.router.navigateByUrl('/app/role');\n      }, (err) => {\n        console.log({ err });\n        this.loadingService.close();\n        this.toastService.show('Error', err, 'error');\n      });\n    } else {\n      this.roleService.add(roleBody).subscribe((response: Role) => {\n        console.log({ response });\n        this.loadingService.close();\n        this.toastService.show('Guardado Correctamente', 'Se ha guardado correctamente', 'success');\n        this.router.navigateByUrl('/app/role');\n\n      }, (err) => {\n        console.log({ err });\n        this.loadingService.close();\n        this.toastService.show('Error', err, 'error');\n      });\n    }\n  }\n\n  async onSubmitPermits(permits: PermitApproved[]) {\n    if (permits.length <= 0) {\n      this.toastService.show('Error', 'Tiene que seleccionar al menos un permiso', 'error');\n    } else {\n      await this.loadingService.presentLoading('Guardando Permisos');\n      try {\n        await this.roleService.assingPermits(this.id, permits).toPromise();\n        this.toastService.show('Guardado Correctamente', 'Se modifico correctamente', 'success');\n\n        this.loadingService.close();\n      } catch (error) {\n        this.toastService.show('Error', 'No se pudieron guardar los permisos', 'error');\n        this.loadingService.close();\n\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RoleEditComponent } from './role-edit/role-edit.component';\n\nimport { RolePage } from './role.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        component: RolePage\n      },\n      {\n        path: 'add',\n        component: RoleEditComponent\n      },\n      {\n        path: ':id',\n        component: RoleEditComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RolePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RolePageRoutingModule } from './role-routing.module';\n\nimport { RolePage } from './role.page';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { RoleEditComponent } from './role-edit/role-edit.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RolePageRoutingModule,\n    UtilsModule,\n    MatInputModule,\n    MatFormFieldModule\n  ],\n  declarations: [RolePage, RoleEditComponent]\n})\nexport class RolePageModule { }\n","<app-header titulo=\"Roles\" [backButton]=\"true\"></app-header>\n<ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <ion-fab-button (click)=\"onAdd()\">\n        <ion-icon name=\"add\"></ion-icon>\n    </ion-fab-button>\n</ion-fab>\n<ion-content class=\"ion-padding\">\n    <ng-template #templateOpciones let-column=\"column\" let-item=\"item\" let-i=\"i\">\n        <ion-button  (click)=\"onEdit(item)\" fill=\"clear\" shape=\"round\">\n            <ion-icon name=\"create-outline\"></ion-icon> Editar\n        </ion-button>\n        <ion-button  (click)=\"onDelete(item)\" fill=\"clear\" shape=\"round\" color=\"danger\">\n            <ion-icon name=\"trash-outline\"></ion-icon> Eliminar\n        </ion-button>\n    </ng-template>\n\n    <app-generic-table #tabla [service]=\"roleService\" [templates]=\"{opciones: templateOpciones}\" [serviceMethod]=\"'list'\" [columns]=\"columns\" [btnAdd]=\"true\">\n    </app-generic-table>\n</ion-content>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RoleService } from 'src/app/services/role.service';\nimport { DTColumn } from '../../../utils/generic-table/format/interface';\nimport { AlertService } from '../../../utils/services/alert.service';\nimport { ToastService } from '../../../utils/services/toast.service';\nimport { Role } from '../../../models/models';\nimport { GenericTableComponent } from '../../../utils/generic-table/generic-table.component';\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.page.html',\n  styleUrls: ['./role.page.scss'],\n})\nexport class RolePage implements OnInit {\n  columns: DTColumn[] = [];\n  @ViewChild('tabla') tabla!: GenericTableComponent;\n\n  constructor(public roleService: RoleService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private alertService: AlertService,\n    private toastService: ToastService) { }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        attribute: 'description',\n        header: 'Descripcion',\n        title: true\n      },\n      {\n        attribute: 'canApprove',\n        header: 'Puede Aprobar',\n        type: 'bool'\n      },\n      {\n        attribute: 'canSuper',\n        header: 'Es Administrador',\n        type: 'bool'\n      },\n      {\n        attribute: 'active',\n        header: 'Esta Activo',\n        type: 'bool'\n      },\n      {\n        attribute: 'createdDate',\n        header: 'Creado el',\n        type: 'date'\n      },\n      {\n        attribute: 'updatedDate',\n        header: 'Modificado el',\n        type: 'date'\n      },\n      {\n        attribute: '_id',\n        header: \"Opciones\",\n        template: \"opciones\"\n      }\n    ]\n  }\n\n  onAdd() {\n    this.router.navigate(['add'], { relativeTo: this.route });\n  }\n\n  onEdit(current: any) {\n    this.router.navigate([current._id], { relativeTo: this.route });\n  }\n\n  async onDelete(current: any) {\n    this.alertService.show('Confirmar Eliminacion', '¿Esta Seguro que desea eliminar este usuario?', 'success', () => {\n      this.roleService.remove(current._id).subscribe((response: Role) => {\n        this.toastService.show(\"Eliminado Correctamente\", \"El usuario fue eliminado correctamente\", \"success\");\n        this.tabla.refresh();\n      }, (err) => {\n        console.log({ err });\n\n        this.toastService.show(\"Error\", err, \"error\");\n\n      });\n    });\n  }\n}\n"]}